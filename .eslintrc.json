{
  "root": true,
  "ignorePatterns": ["**/*"],
  "parserOptions": {
    "sourceType": "module"
  },
  "extends": [
    "plugin:mdx/recommended",
    "plugin:@typescript-eslint/recommended",
    "prettier"
  ],
  "plugins": [
    "@nrwl/nx",
    "simple-import-sort",
    "react-hooks",
    "testing-library",
    "jest-dom"
  ],
  "settings": {
    "mdx/code-blocks": true
  },
  "rules": {
    "react-hooks/rules-of-hooks": "error", // Checks rules of Hooks
    "react-hooks/exhaustive-deps": [
      "warn",
      { "enableDangerousAutofixThisMayCauseInfiniteLoops": true }
    ], // Checks effect dependencies
    "no-unused-vars": "error",
    "import/no-duplicates": "error",
    "simple-import-sort/exports": "error",
    "simple-import-sort/imports": [
      "error",
      {
        "groups": [
          // Packages. `react` related packages come first.
          // Things that start with a letter (or digit or underscore), or `@` followed by a letter.
          ["^react", "^@?\\w"],
          // Side effect imports.
          ["^\\u0000"],
          // Packages.
          // Internal packages.
          ["^(components)(/.*|$)"],
          // Absolute imports and Relative imports.
          // [`^(${folders.join("|")})(/.*|$)`, "^\\."],
          // Parent imports. Put `..` last.
          ["^\\.\\.(?!/?$)", "^\\.\\./?$"],
          // Other relative imports. Put same-folder imports and `.` last.
          ["^\\./(?=.*/)(?!/?$)", "^\\.(?!/?$)", "^\\./?$"],
          // Anything that starts with a dot.
          ["^\\."]
        ]
      }
    ]
  },
  "overrides": [
    {
      "files": ["*.ts", "*.tsx", "*.js", "*.jsx"],
      "plugins": ["import"],
      "rules": {
        "import/first": "error",
        "import/newline-after-import": "error",
        "import/no-duplicates": "error"
      }
    },
    {
      "files": ["*.ts", "*.tsx", "*.js", "*.jsx"],
      "rules": {
        "@nrwl/nx/enforce-module-boundaries": [
          "error",
          {
            "enforceBuildableLibDependency": true,
            "allow": [],
            "depConstraints": [
              {
                "sourceTag": "type:app",
                "onlyDependOnLibsWithTags": ["type:util", "type:ui"]
              },
              {
                "sourceTag": "type:ui",
                "onlyDependOnLibsWithTags": [
                  "type:ui",
                  "type:util",
                  "type:hooks",
                  "type:data"
                ]
              },
              {
                "sourceTag": "type:util",
                "onlyDependOnLibsWithTags": [
                  "type:ui",
                  "type:util",
                  "type:hooks",
                  "type:data"
                ]
              }
            ]
          }
        ]
      }
    },
    {
      "files": ["*.ts", "*.tsx"],
      "extends": ["plugin:@nrwl/nx/typescript"],
      "rules": {
        // disabled because it conflicts with jsx-a11y/alt-text
        "jsx-a11y/img-redundant-alt": "off",
        // changed to match the default tsconfig
        "@typescript-eslint/no-explicit-any": "off",
        "@typescript-eslint/explicit-member-accessibility": "off",
        "@typescript-eslint/explicit-function-return-type": "off",
        "@typescript-eslint/no-non-null-assertion": "off",
        "@typescript-eslint/no-empty-function": "off",
        "@typescript-eslint/prefer-interface": "off",
        "@typescript-eslint/no-empty-interface": [
          "error",
          {
            "allowSingleExtends": true
          }
        ],
        "@typescript-eslint/no-angle-bracket-type-assertion": "off",
        "@typescript-eslint/ban-ts-comment": "off"
      }
    },
    {
      "files": ["*.js", "*.jsx"],
      "extends": ["plugin:@nrwl/nx/javascript"],
      "rules": {
        // this should just be fixed
        "@typescript-eslint/no-unused-vars": "off",
        // opinion: this is reasonable to disable
        "@typescript-eslint/no-use-before-define": "off",
        "@typescript-eslint/no-var-requires": "off",
        "@typescript-eslint/explicit-function-return-type": "off",
        "@typescript-eslint/ban-ts-comment": "off"
      }
    }
  ]
}
